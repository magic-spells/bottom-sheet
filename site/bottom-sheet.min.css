bottom-sheet bottom-sheet-overlay {
  box-sizing: border-box;
  backdrop-filter: blur(5px);
  background: #00000080;
  width: 100vw;
  height: 100%;
  transition: background .4s;
  position: fixed;
  top: 0;
  left: 0;
}

bottom-sheet[aria-hidden="true"] bottom-sheet-overlay {
  pointer-events: none;
  backdrop-filter: none;
  background: none;
}

bottom-sheet-header {
  padding: 0 20px;
  position: relative;
}

bottom-sheet-header:before {
  content: "";
  background: #bbb;
  border-radius: 5px;
  width: 50px;
  height: 5px;
  display: block;
  position: absolute;
  top: 8px;
  left: 50%;
  transform: translateX(-50%);
}

bottom-sheet-panel {
  box-sizing: border-box;
  will-change: transform;
  background: #fff;
  border-top-left-radius: 25px;
  border-top-right-radius: 25px;
  flex-direction: column;
  width: 100%;
  height: 85vh;
  transition: none;
  display: flex;
  position: fixed;
  top: 15vh;
  left: 0;
  overflow: hidden;
  box-shadow: 0 1px 20px -4px #0000004d, 0 0 7px #0000001a;
}

bottom-sheet-panel.transitioning {
  transition: transform .3s;
}

bottom-sheet[aria-hidden="true"] bottom-sheet-panel {
  transform: translate3d(0, 100%, 0);
}

bottom-sheet[aria-hidden="false"] bottom-sheet-panel {
  transform: translate3d(0, 0, 0);
}

bottom-sheet-content {
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;
  padding: 0 20px;
  overflow-y: scroll;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzL2NvcnlzY2h1bHovQ29kZS9ib3R0b20tc2hlZXQvc3JjL2JvdHRvbS1zaGVldC5zY3NzIiwiYm90dG9tLXNoZWV0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUNDRSxzQkFBc0I7RUFDdEIsMEJBQTBCO0VBQzFCLHFCQUFxQjtFQUNyQixZQUFZO0VBQ1osWUFBWTtFQUNaLDBCQUEwQjtFQUMxQixlQUFlO0VBQ2YsTUFBTTtFQUNOLE9BQU87QUFDVDs7QURFQTtFQ0NFLG9CQUFvQjtFQUNwQixxQkFBcUI7RUFDckIsZ0JBQWdCO0FBQ2xCOztBREdBO0VDQUUsZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QURHQTtFQ0FFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULDJCQUEyQjtBQUM3Qjs7QURHQTtFQ0FFLHNCQUFzQjtFQUN0QixzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0Isc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixlQUFlO0VBQ2YsU0FBUztFQUNULE9BQU87RUFDUCxnQkFBZ0I7RUFDaEIsd0RBQXdEO0FBQzFEOztBREdBO0VDQUUseUJBQXlCO0FBQzNCOztBREdBO0VDQUUsa0NBQWtDO0FBQ3BDOztBREdBO0VDQUUsK0JBQStCO0FBQ2pDOztBREtBO0VDRkUsc0JBQXNCO0VBQ3RCLGlDQUFpQztFQUNqQyxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCIiwiZmlsZSI6ImJvdHRvbS1zaGVldC5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm90dG9tLXNoZWV0IGJvdHRvbS1zaGVldC1vdmVybGF5IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgNDAwbXMgZWFzZTtcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7XG59XG5cbmJvdHRvbS1zaGVldFthcmlhLWhpZGRlbj10cnVlXSBib3R0b20tc2hlZXQtb3ZlcmxheSB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDApO1xuICBiYWNrZHJvcC1maWx0ZXI6IG5vbmU7XG59XG5cbmJvdHRvbS1zaGVldC1oZWFkZXIge1xuICBwYWRkaW5nOiAwIDIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuYm90dG9tLXNoZWV0LWhlYWRlcjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQ6ICNiYmI7XG4gIGhlaWdodDogNXB4O1xuICB3aWR0aDogNTBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDhweDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuYm90dG9tLXNoZWV0LXBhbmVsIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDI1cHg7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAyNXB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDE1dmg7XG4gIGxlZnQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDAgMXB4IDIwcHggLTRweCByZ2JhKDAsIDAsIDAsIDAuMyksIDAgMCA3cHggMCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gIGhlaWdodDogODV2aDtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbn1cblxuYm90dG9tLXNoZWV0LXBhbmVsLnRyYW5zaXRpb25pbmcge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZTtcbn1cblxuYm90dG9tLXNoZWV0W2FyaWEtaGlkZGVuPXRydWVdIGJvdHRvbS1zaGVldC1wYW5lbCB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG59XG5cbmJvdHRvbS1zaGVldFthcmlhLWhpZGRlbj1mYWxzZV0gYm90dG9tLXNoZWV0LXBhbmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuYm90dG9tLXNoZWV0LWNvbnRlbnQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDtcbiAgcGFkZGluZzogMCAyMHB4O1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltWnBiR1U2THk4dlZYTmxjbk12WTI5eWVYTmphSFZzZWk5RGIyUmxMMkp2ZEhSdmJTMXphR1ZsZEM5emNtTXZZbTkwZEc5dExYTm9aV1YwTG5OamMzTWlMQ0p6Y21NdlltOTBkRzl0TFhOb1pXVjBMbk5qYzNNaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdSVUZEUlN4bFFVRkJPMFZCUTBFc1RVRkJRVHRGUVVOQkxFOUJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMRGhDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4cFEwRkJRVHRGUVVOQkxEQkNRVUZCTzBGRFEwWTdPMEZFUlVFN1JVRkRSU3h2UWtGQlFUdEZRVU5CTERSQ1FVRkJPMFZCUTBFc2NVSkJRVUU3UVVORFJqczdRVVJIUVR0RlFVTkZMR1ZCUVVFN1JVRkRRU3hyUWtGQlFUdEJRMEZHT3p0QlJFZEJPMFZCUTBVc1YwRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4UlFVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxESkNRVUZCTzBWQlEwRXNhMEpCUVVFN1FVTkJSanM3UVVSSFFUdEZRVU5GTEdsQ1FVRkJPMFZCUTBFc2MwSkJRVUU3UlVGRFFTdzBRa0ZCUVR0RlFVTkJMRFpDUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNUMEZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzTkVWQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeG5Ra0ZCUVR0QlEwRkdPenRCUkVkQk8wVkJRMFVzWjBOQlFVRTdRVU5CUmpzN1FVUkhRVHRGUVVORkxHdERRVUZCTzBGRFFVWTdPMEZFUjBFN1JVRkRSU3dyUWtGQlFUdEJRMEZHT3p0QlJFdEJPMFZCUTBVc2MwSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR2xEUVVGQk8wVkJRMEVzWlVGQlFUdEJRMFpHSWl3aVptbHNaU0k2SW5SdkxtTnpjeUo5ICovIiwiYm90dG9tLXNoZWV0IGJvdHRvbS1zaGVldC1vdmVybGF5IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7XG4gIGJhY2tncm91bmQ6ICMwMDAwMDA4MDtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjRzO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cblxuYm90dG9tLXNoZWV0W2FyaWEtaGlkZGVuPVwidHJ1ZVwiXSBib3R0b20tc2hlZXQtb3ZlcmxheSB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBiYWNrZHJvcC1maWx0ZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG5cbmJvdHRvbS1zaGVldC1oZWFkZXIge1xuICBwYWRkaW5nOiAwIDIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuYm90dG9tLXNoZWV0LWhlYWRlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kOiAjYmJiO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDVweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA4cHg7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG5ib3R0b20tc2hlZXQtcGFuZWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyNXB4O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjVweDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogODV2aDtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDE1dmg7XG4gIGxlZnQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJveC1zaGFkb3c6IDAgMXB4IDIwcHggLTRweCAjMDAwMDAwNGQsIDAgMCA3cHggIzAwMDAwMDFhO1xufVxuXG5ib3R0b20tc2hlZXQtcGFuZWwudHJhbnNpdGlvbmluZyB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3M7XG59XG5cbmJvdHRvbS1zaGVldFthcmlhLWhpZGRlbj1cInRydWVcIl0gYm90dG9tLXNoZWV0LXBhbmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTtcbn1cblxuYm90dG9tLXNoZWV0W2FyaWEtaGlkZGVuPVwiZmFsc2VcIl0gYm90dG9tLXNoZWV0LXBhbmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuYm90dG9tLXNoZWV0LWNvbnRlbnQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIHBhZGRpbmc6IDAgMjBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuIl19*/